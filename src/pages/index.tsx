import Head from 'next/head'
import { GetServerSideProps } from 'next'
import { GraphQLClient, gql } from 'graphql-request'

import LastetExhibition from '@/components/LatestExhibition'
import Exhibitions from '@/components/Exhibitions'
import { styled } from 'styled-components'

type Props = {
  exhibitions: Exhibitions[]
}

export default function Home({ exhibitions }: Props) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container>
          {/* Latest Exhibition */}
          <LastetExhibition exhibition={exhibitions} />
          <InfoCard>
            <p>
              <strong>Stay Informed. </strong>Sign up to receive bimonthly
              emails from Mia.
            </p>
          </InfoCard>

          {/* All Exhibition */}
          <Exhibitions exhibitions={exhibitions} />
        </Container>
      </main>
    </>
  )
}

const Container = styled.section`
  max-width: 1280px;
  margin: 0 auto;

  display: grid;
  grid-template-areas:
    'highlight highlight highlight'
    'info info info'
    'exhibition exhibition exhibition';
  grid-template-columns: repeat(3, 1fr);
  gap: 2.5rem;
`

const InfoCard = styled.div`
  grid-area: info;
`

export const getServerSideProps: GetServerSideProps = async () => {
  const client = new GraphQLClient(
    process.env.NEXT_PUBLIC_GRAPHCMS_URL as string
  )

  const query = gql`
    query Exhibitions {
      exhibitions {
        id
        slug
        title
        date
        image {
          url(transformation: { document: { output: { format: webp } } })
        }
        description
      }
    }
  `
  const data = await client.request(query)

  return {
    props: { exhibitions: data.exhibitions },
  }
}
