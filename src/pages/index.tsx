import Head from 'next/head'
import { GetServerSideProps } from 'next'
import { GraphQLClient, gql } from 'graphql-request'

import LastetExhibition from '@/components/LatestExhibition'
import Exhibitions from '@/components/Exhibitions'

type Props = {
  exhibitions: Exhibitions[]
}

// interface Props {
//   exhibitions: {
//     date: string
//     description: string
//     id: string
//     slug: string
//     title: string
//     content: {
//       html: string
//     }
//     image: {
//       id: string
//       url: string
//     }
//   }
// }

export default function Home({ exhibitions }: Props) {
  // console.log(`====> Exhibitions`, exhibitions);

  // Return the array minus the first element
  const [, ...rest] = exhibitions

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <ul>
          <LastetExhibition exhibitions={exhibitions} />
          <div>
            <p>
              <strong>Stay Informed. </strong>Sign up to receive bimonthly
              emails from Mia.
            </p>
          </div>

          {/* blogs */}
          {[, ...rest].map((exhibitions) => (
            <Exhibitions key={exhibitions.id} exhibitions={exhibitions} />
          ))}
        </ul>
      </main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const client = new GraphQLClient(
    process.env.NEXT_PUBLIC_GRAPHCMS_URL as string
  )

  const query = gql`
    query Exhibitions {
      exhibitions {
        id
        slug
        title
        date
        image {
          url(transformation: { document: { output: { format: webp } } })
        }
        description
      }
    }
  `
  const data = await client.request(query)

  return {
    props: { exhibitions: data.exhibitions },
  }
}
